import { Module, Global } from '@nestjs/common';
import { APP_INTERCEPTOR, APP_GUARD } from '@nestjs/core';
import { ErrorHandlingInterceptor } from './interceptors/error-handling.interceptor';
import { JwtAuthGuard } from './guards/jwt-auth.guard';
import { LocalAuthGuard } from './guards/local-auth.guard';
import { JwtStrategy } from './strategies/jwt.strategy';
import { LocalStrategy } from './strategies/local.strategy';
import { RateLimitGuard } from './guards/rate-limit.guard';
import { PrismaModule } from '../prisma/prisma.module';

@Global()
@Module({
  imports: [PrismaModule], // C·∫ßn PrismaModule cho LocalStrategy
  providers: [
    {
      provide: APP_INTERCEPTOR,
      useClass: ErrorHandlingInterceptor,
    },
    JwtStrategy,
    LocalStrategy,
    JwtAuthGuard,
    LocalAuthGuard,
    RateLimitGuard,
    // üîí B·∫¢O M·∫¨T: B·ªè comment d√≤ng d∆∞·ªõi ƒë·ªÉ b·∫≠t JWT authentication cho to√†n b·ªô app
    // üîì T·∫ÆT B·∫¢O M·∫¨T: Comment d√≤ng d∆∞·ªõi ƒë·ªÉ t·∫Øt JWT authentication (ch·ªâ d√πng khi test)
    // { provide: APP_GUARD, useClass: JwtAuthGuard },
  ],
  exports: [
    JwtAuthGuard,
    LocalAuthGuard,
    JwtStrategy,
    LocalStrategy,
    RateLimitGuard,
  ], // Export ƒë·ªÉ c√°c module kh√°c c√≥ th·ªÉ s·ª≠ d·ª•ng
})
export class CommonModule {}
